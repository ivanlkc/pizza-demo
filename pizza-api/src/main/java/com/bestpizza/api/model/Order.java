/*
 * Best Pizza Order API
 * This is the OpenAPI definition for the Best Pizza Order API. You can view it using the Swagger Editor available at [https://editor.swagger.io/](https://editor.swagger.io/).
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.bestpizza.api.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.bestpizza.api.model.Pizza;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
//import io.swagger.annotations.ApiModel;
//import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.dataformat.xml.annotation.*;
import javax.xml.bind.annotation.*;


/**
 * Order
 */
@JsonPropertyOrder({
  Order.JSON_PROPERTY_ID,
  Order.JSON_PROPERTY_PRICE,
  Order.JSON_PROPERTY_PIZZAS
})
@javax.annotation.processing.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-11-01T07:23:00.448234800+08:00[Asia/Hong_Kong]")
@XmlRootElement(name = "Order")
@XmlAccessorType(XmlAccessType.FIELD)
@JacksonXmlRootElement(localName = "Order")
public class Order implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String JSON_PROPERTY_ID = "id";
  @XmlElement(name = "id")
  private String id;

  public static final String JSON_PROPERTY_PRICE = "price";
  @XmlElement(name = "price")
  private Integer price;

  public static final String JSON_PROPERTY_PIZZAS = "pizzas";
  // Is a container wrapped=false
  // items.name=pizzas items.baseName=pizzas items.xmlName= items.xmlNamespace=
  // items.example= items.type=Pizza
  @XmlElement(name = "pizzas")
  private List<Pizza> pizzas = new ArrayList<>();


  public Order id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  //@javax.annotation.Nullable
  //@ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "id")

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  @JacksonXmlProperty(localName = "id")
  public void setId(String id) {
    this.id = id;
  }


  public Order price(Integer price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  //@javax.annotation.Nonnull
  //@ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "price")

  public Integer getPrice() {
    return price;
  }


  @JsonProperty(JSON_PROPERTY_PRICE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  @JacksonXmlProperty(localName = "price")
  public void setPrice(Integer price) {
    this.price = price;
  }


  public Order pizzas(List<Pizza> pizzas) {
    this.pizzas = pizzas;
    return this;
  }

  public Order addPizzasItem(Pizza pizzasItem) {
    this.pizzas.add(pizzasItem);
    return this;
  }

   /**
   * Get pizzas
   * @return pizzas
  **/
  //@javax.annotation.Nonnull
  //@ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PIZZAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<Pizza> getPizzas() {
    return pizzas;
  }


  @JsonProperty(JSON_PROPERTY_PIZZAS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPizzas(List<Pizza> pizzas) {
    this.pizzas = pizzas;
  }


  /**
   * Return true if this Order object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Order order = (Order) o;
    return Objects.equals(this.id, order.id) &&
        Objects.equals(this.price, order.price) &&
        Objects.equals(this.pizzas, order.pizzas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, price, pizzas);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Order {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    pizzas: ").append(toIndentedString(pizzas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

